import Redis from "ioredis";

const redis = new Redis();

export const setObject = async (key, object, exp) => exp
  ? await redis.set(key, JSON.stringify(object), "ex", exp)
  : await redis.set(key, JSON.stringify(object));

export const getObject = async (key) =>
  JSON.parse(await redis.get(key));

export const setString = async (key, str, exp) => exp
  ? await redis.set(key, str, "ex", exp)
  : await redis.set(key, str);

export const removeKey = async (key) =>
  await redis.del(key);

export const hasKey = async (key) =>
  await redis.exists(key);

export const getString = async (key) =>
  await redis.get(key);

export const addStringToSet = async (key, str) =>
  await redis.sadd(key, str);

export const getSet = async (key) =>
  await redis.smembers(key);

export const setHasString = async (key, str) =>
  await redis.sismember(key, str);

export const getSetLength = async (key) =>
  await redis.scard(key);

export const removeSetString = async (key, str) =>
  await redis.srem(key, str);

export default redis;
